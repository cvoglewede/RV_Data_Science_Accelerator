Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table = 10000
ii. Business table = 10000
iii. Category table = 10000
iv. Checkin table = 10000
v. elite_years table = 10000
vi. friend table = 10000
vii. hours table = 10000
viii. photo table = 10000
ix. review table = 10000
x. tip table = 10000
xi. user table = 10000
	


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business = 10000
ii. Hours = 1562
iii. Category = 2643
iv. Attribute = 1115
v. Review = 
	id = 10000
	business_id = 8090
	user_id = 9581
vi. Checkin = 493
vii. Photo =
	id = 10000
	business_id = 6493
viii. Tip = 
	user_id = 537
	business_id = 3979 
ix. User = 10000
x. Friend = 11
xi. Elite_years = 2780

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: no
	
	
	SQL code used to arrive at answer:

select
	sum(case when name is null then 1 else 0 end) as null_test
	,sum(case when review_count is null then 1 else 0 end) as null_test2
	,sum(case when yelping_since is null then 1 else 0 end) as null_test3
	,sum(case when useful is null then 1 else 0 end) as null_test4
	,sum(case when funny is null then 1 else 0 end) as null_test5
	,sum(case when cool is null then 1 else 0 end) as null_test6
	,sum(case when fans is null then 1 else 0 end) as null_test7
	,sum(case when average_stars is null then 1 else 0 end) as null_test8
	,sum(case when compliment_hot is null then 1 else 0 end) as null_test9
	,sum(case when compliment_more is null then 1 else 0 end) as null_test10
	,sum(case when compliment_profile is null then 1 else 0 end) as null_test11
	,sum(case when compliment_cute is null then 1 else 0 end) as null_test12
	,sum(case when compliment_list is null then 1 else 0 end) as null_test13
	,sum(case when compliment_note is null then 1 else 0 end) as null_test14
	,sum(case when compliment_plain is null then 1 else 0 end) as null_test15
	,sum(case when compliment_cool is null then 1 else 0 end) as null_test16
	,sum(case when compliment_funny is null then 1 else 0 end) as null_test17
	,sum(case when compliment_writer is null then 1 else 0 end) as null_test18
	,sum(case when compliment_photos is null then 1 else 0 end) as null_test19

from User
	
	

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min:	1	max:	5	avg: 3.7082
		
	
	ii. Table: Business, Column: Stars
	
		min:	1	max:	5	avg: 3.6549
		
	
	iii. Table: Tip, Column: Likes
	
		min:	0	max:	2	avg: 0.0144
		
	
	iv. Table: Checkin, Column: Count
	
		min:	1	max:	53	avg: 1.9414
		
	
	v. Table: User, Column: Review_count
	
		min:	0	max:	2000	avg: 24.2995
		


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:

SELECT 
city
,sum(review_count) AS review_count
FROM business
GROUP BY city
order by review_count desc
	
	Copy and Paste the Result Below:

+-----------------+--------------+
| city            | review_count |
+-----------------+--------------+
| Las Vegas       |        82854 |
| Phoenix         |        34503 |
| Toronto         |        24113 |
| Scottsdale      |        20614 |
| Charlotte       |        12523 |
| Henderson       |        10871 |
| Tempe           |        10504 |
| Pittsburgh      |         9798 |
| Montréal        |         9448 |
| Chandler        |         8112 |
| Mesa            |         6875 |
| Gilbert         |         6380 |
| Cleveland       |         5593 |
| Madison         |         5265 |
| Glendale        |         4406 |
| Mississauga     |         3814 |
| Edinburgh       |         2792 |
| Peoria          |         2624 |
| North Las Vegas |         2438 |
| Markham         |         2352 |
| Champaign       |         2029 |
| Stuttgart       |         1849 |
| Surprise        |         1520 |
| Lakewood        |         1465 |
| Goodyear        |         1155 |
+-----------------+--------------+
(Output limit exceeded, 25 of 362 total rows shown)
	

	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:


-- This question is vague. Am I looking for the distribution of the number of businesses by star rating or the number of reviews by star rating? I'm going to assume that I'm looking for the former as it would allow for the comparison of cities without data being skewed by high review counts.
SELECT 
stars
,count(distinct(name)) as count
FROM business
where city='Avon'
group by stars

Copy and Paste the Resulting Table Below (2 columns – star rating and count):

+-------+-------+
| stars | count |
+-------+-------+
|   1.5 |     1 |
|   2.5 |     2 |
|   3.5 |     3 |
|   4.0 |     2 |
|   4.5 |     1 |
|   5.0 |     1 |
+-------+-------+

ii. Beachwood

SQL code used to arrive at answer:

-- This question is vague. Am I looking for the distribution of the number of businesses by star rating or the number of reviews by star rating? I'm going to assume that I'm looking for the former as it would allow for the comparison of cities without data being skewed by high review counts.
SELECT 
stars
,count(distinct(name)) as count
FROM business
where city='Beachwood'
group by stars

Copy and Paste the Resulting Table Below (2 columns – star rating and count):
		
+-------+-------+
| stars | count |
+-------+-------+
|   2.0 |     1 |
|   2.5 |     1 |
|   3.0 |     2 |
|   3.5 |     2 |
|   4.0 |     1 |
|   4.5 |     2 |
|   5.0 |     5 |
+-------+-------+		


7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:
	
SELECT 
name
,review_count
FROM user
ORDER BY review_count DESC
limit 3

	Copy and Paste the Result Below:
		
+--------+--------------+
| name   | review_count |
+--------+--------------+
| Gerald |         2000 |
| Sara   |         1629 |
| Yuri   |         1339 |
+--------+--------------+

8. Does posing more reviews correlate with more fans?

	Please explain your findings and interpretation of the results:
	
The best way to find the correlation between review count and fans would be to export the 10,000 rows of data from the user table and conduct a precise correlation calculation. Without that, based on the output of the query below, I would say that there appears to be a positive correlation between the number of reviews a user posts and the number of fans that user as accumulated.

SELECT 
id
,name
,review_count
,fans
from user
order by fans desc

+------------------------+-----------+--------------+------+
| id                     | name      | review_count | fans |
+------------------------+-----------+--------------+------+
| -9I98YbNQnLdAmcYfb324Q | Amy       |          609 |  503 |
| -8EnCioUmDygAbsYZmTeRQ | Mimi      |          968 |  497 |
| --2vR0DIsmQ6WfcSzKWigw | Harald    |         1153 |  311 |
| -G7Zkl1wIWBBmD0KRy_sCw | Gerald    |         2000 |  253 |
| -0IiMAZI2SsQ7VmyzJjokQ | Christine |          930 |  173 |
| -g3XIcCb2b-BD0QBCcq2Sw | Lisa      |          813 |  159 |
| -9bbDysuiWeo2VShFJJtcw | Cat       |          377 |  133 |
| -FZBTkAZEXoP7CYvRV2ZwQ | William   |         1215 |  126 |
| -9da1xk7zgnnfO1uTVYGkA | Fran      |          862 |  124 |
| -lh59ko3dxChBSZ9U7LfUw | Lissa     |          834 |  120 |
| -B-QEUESGWHPE_889WJaeg | Mark      |          861 |  115 |
| -DmqnhW4Omr3YhmnigaqHg | Tiffany   |          408 |  111 |
| -cv9PPT7IHux7XUc9dOpkg | bernice   |          255 |  105 |
| -DFCC64NXgqrxlO8aLU5rg | Roanna    |         1039 |  104 |
| -IgKkE8JvYNWeGu8ze4P8Q | Angela    |          694 |  101 |
| -K2Tcgh2EKX6e6HqqIrBIQ | .Hon      |         1246 |  101 |
| -4viTt9UC44lWCFJwleMNQ | Ben       |          307 |   96 |
| -3i9bhfvrM3F1wsC9XIB8g | Linda     |          584 |   89 |
| -kLVfaJytOJY2-QdQoCcNQ | Christina |          842 |   85 |
| -ePh4Prox7ZXnEBNGKyUEA | Jessica   |          220 |   84 |
| -4BEUkLvHQntN6qPfKJP2w | Greg      |          408 |   81 |
| -C-l8EHSLXtZZVfUAUhsPA | Nieves    |          178 |   80 |
| -dw8f7FLaUmWR7bfJ_Yf0w | Sui       |          754 |   78 |
| -8lbUNlXVSoXqaRRiHiSNg | Yuri      |         1339 |   76 |
| -0zEEaDFIjABtPQni0XlHA | Nicole    |          161 |   73 |
+------------------------+-----------+--------------+------+
(Output limit exceeded, 25 of 10000 total rows shown)
	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer:

There are 1,780 reviews with the word 'love' in them but only 232 with the word 'hate' in them, so there are more reviews with 'love'.

+---------------+--------------+--------------+
| total_reviews | Love_reviews | Hate_reviews |
+---------------+--------------+--------------+
|         10000 |         1780 |          232 |
+---------------+--------------+--------------+
	
	SQL code used to arrive at answer:

SELECT 
count(distinct(id)) as total_reviews
,sum(case when text like '%love%' then 1 else 0 end) as Love_reviews
,sum(case when text like '%hate%' then 1 else 0 end) as Hate_reviews

from review

	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
	
SELECT 
name
,fans
from user
order by fans desc
limit 10
	
	Copy and Paste the Result Below:

+-----------+------+
| name      | fans |
+-----------+------+
| Amy       |  503 |
| Mimi      |  497 |
| Harald    |  311 |
| Gerald    |  253 |
| Christine |  173 |
| Lisa      |  159 |
| Cat       |  133 |
| William   |  126 |
| Fran      |  124 |
| Lissa     |  120 |
+-----------+------+
	
11. Is there a strong relationship (or correlation) between having a high number of fans and being listed as "useful" or "funny?" Out of the top 10 users with the highest number of fans, what percent are also listed as “useful” or “funny”?

Key:
0% - 25% - Low relationship
26% - 75% - Medium relationship
76% - 100% - Strong relationship
	
	SQL code used to arrive at answer:

SELECT 
t1.name
,t1.fans
,t1.funny
,t1.useful
,t2.name as Top10_Funny
,t3.name as Top10_Useful
FROM 
(SELECT name
,fans
,useful
,funny
FROM user
ORDER BY fans DESC
limit 10) t1

left join (
SELECT name
,fans
,useful
,funny
FROM user
ORDER BY funny DESC
limit 10) t2 on t2.name=t1.name

left join (
SELECT name
,fans
,useful
,funny
FROM user
ORDER BY useful DESC
limit 10) t3 on t3.name=t1.name

ORDER BY t1.fans DESC

	Copy and Paste the Result Below:

+-----------+------+--------+--------+-------------+--------------+
| name      | fans |  funny | useful | Top10_Funny | Top10_Useful |
+-----------+------+--------+--------+-------------+--------------+
| Amy       |  503 |   2554 |   3226 |        None |         None |
| Mimi      |  497 |    138 |    257 |        None |         None |
| Harald    |  311 | 122419 | 122921 |      Harald |       Harald |
| Gerald    |  253 |   2324 |  17524 |        None |       Gerald |
| Christine |  173 |   6646 |   4834 |   Christine |    Christine |
| Lisa      |  159 |     13 |     48 |        None |         None |
| Cat       |  133 |    672 |   1062 |        None |         None |
| William   |  126 |   9361 |   9363 |     William |      William |
| Fran      |  124 |   7606 |   9851 |        Fran |         Fran |
| Lissa     |  120 |    150 |    455 |        None |         None |
+-----------+------+--------+--------+-------------+--------------+
	
	Please explain your findings and interpretation of the results:
	
This is a very odd question. Users aren't declared 'useful' or funny. It appears that every review can be scored on being funny or usefulness. On the users table, funny and useful are just the sums of their total review funny and useful scores. To find the ratio of high-fan users with 'useful' and 'funny' users, I calculated top 10 lists for each of 'funny' and 'useful'. Of the top 10 fan users, 30% appear in the top 10 list for 'funny' and 40% appear in the top 10 list for 'useful', so I suppose there is a medium relationship between fans and being funny and between fans and usefulness.

	

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
	
i. Do the two groups you chose to analyze have a different distribution of hours?

I have chosen the city of Toronto's restaurants for analysis. Most business entries have no category clasification, so it was difficult to find a category with sufficient size to analyze. To make the business hours analysis simpler, I have focused on a single weekday for hours. There seems to be a slight difference between the high-rating group and the low-rating group. The high-rating group restaurants tend to stay open later and open later (after lunch)

ii. Do the two groups you chose to analyze have a different number of reviews?
         
 There is a sizeable difference in the the number of reviews per business between the two rating groups. The high-rating group gets 41 reviews on average while the low-rating group receives 22.
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.

The only potential insight from location data that I could gather is that high-rating businesses tended to have a more western longitude within the city of Toronro. Using postal code and neighbordhood revealed no insights. Distribution of rating by latitude was inconclusive. 

SQL code used for analysis:

i. 
select 
case 
  when stars between 2 and 3.5 then 'low-rating'
  when stars between 4 and 5 then 'high-rating'
  else 'null' end as Rating_Group
,h.hours
,count(id) as count

from business b
left join category c on c.business_id=b.id
left join hours h on h.business_id=b.id 
  and h.hours like '%wed%' 
where c.category='Restaurants'
and b.city='Toronto'
and b.stars>=2
group by
case 
  when stars between 2 and 3.5 then 'low-rating'
  when stars between 4 and 5 then 'high-rating'
  else 'null' end
,h.hours
order by Rating_Group,Hours

+--------------+-----------------------+-------+
| Rating_Group |                 hours | count |
+--------------+-----------------------+-------+
| high-rating  |                  None |     2 |
| high-rating  | Wednesday|11:00-23:00 |     1 |
| high-rating  | Wednesday|18:00-23:00 |     1 |
| high-rating  |  Wednesday|18:00-2:00 |     1 |
| low-rating   |                  None |     1 |
| low-rating   | Wednesday|10:30-21:00 |     1 |
| low-rating   | Wednesday|11:00-23:00 |     1 |
| low-rating   |  Wednesday|9:00-23:00 |     1 |
+--------------+-----------------------+-------+

ii. 
select 
case 
  when stars between 2 and 3.5 then 'low-rating'
  when stars between 4 and 5 then 'high-rating'
  else 'null' end as Rating_Group
,count(id) as businesses
,sum(review_count) as reviews
,sum(review_count)/count(id) as reviews_per_business

from business b
left join category c on c.business_id=b.id
where c.category='Restaurants'
and b.city='Toronto'
and b.stars>=2
group by
case 
  when stars between 2 and 3.5 then 'low-rating'
  when stars between 4 and 5 then 'high-rating'
  else 'null' end

order by Rating_Group

+--------------+------------+---------+----------------------+
| Rating_Group | businesses | reviews | reviews_per_business |
+--------------+------------+---------+----------------------+
| high-rating  |          5 |     206 |                   41 |
| low-rating   |          4 |      89 |                   22 |
+--------------+------------+---------+----------------------+

iii.

select 
case 
  when stars between 2 and 3.5 then 'low-rating'
  when stars between 4 and 5 then 'high-rating'
  else 'null' end as Rating_Group
,b.postal_code
,b.neighborhood
,b.latitude
,b.longitude

from business b
left join category c on c.business_id=b.id
where c.category='Restaurants'
and b.city='Toronto'
and b.stars>=2

order by longitude

+--------------+-------------+------------------------+----------+-----------+
| Rating_Group | postal_code | neighborhood           | latitude | longitude |
+--------------+-------------+------------------------+----------+-----------+
| high-rating  | M9A 1C2     | Etobicoke              |  43.6452 |  -79.5324 |
| high-rating  | M6P 1A6     | High Park              |  43.6553 |  -79.4567 |
| high-rating  | M6C 1B6     |                        |  43.6809 |  -79.4302 |
| low-rating   | M6B         |                        |  43.7175 |  -79.4291 |
| high-rating  | M2N 5R6     | Willowdale             |  43.7766 |  -79.4142 |
| high-rating  | M5V         | Niagara                |  43.6419 |  -79.4066 |
| low-rating   | M5H 1X6     | Entertainment District |  43.6479 |  -79.3901 |
| low-rating   | M4B 2L9     | Downtown Core          |  43.6546 |  -79.3805 |
| low-rating   | M5B 2E5     | Downtown Core          |  43.6614 |   -79.379 |
+--------------+-------------+------------------------+----------+-----------+


		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1:

The average rating is 4.6% higher for open businesses (3.69 vs 3.53).
         
ii. Difference 2:
         
The average number of reviews per business is 38% higher for businesses that are open vs businesses that are closed.         
         
SQL code used for analysis:

select 
b.is_open
,count(id) as count
,avg(stars) as average_rating
,sum(review_count)/count(id) as review_per_business

from business b
left join category c on c.business_id=b.id

group by b.is_open

+---------+-------+----------------+---------------------+
| is_open | count | average_rating | review_per_business |
+---------+-------+----------------+---------------------+
|       0 |  1610 |   3.5301242236 |                  24 |
|       1 |  8902 |  3.69169849472 |                  33 |
+---------+-------+----------------+---------------------+
	
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:

I want to build a dataset that can be used to predict how many fans would be expected based on aggregated review information.
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:
                           
I would need a dataset that is unique on yelp reviewer with their total fan counts. I would also need a set of features based on their reviews. 


iii. Output of your finished dataset:
         
 Too large to include here..     

iv. Provide the SQL code you used to create your final dataset:


selecT 
u.*
,r.reviews
,r.avg_rating
,r.avg_funny
,r.avg_useful
,r.avg_cool
,r.min_rating
,r.min_funny
,r.min_useful
,r.min_cool
,r.max_rating
,r.max_funny
,r.max_useful
,r.max_cool
from user u 
inner join (select 
user_id
,count(id) as reviews
,avg(stars) as avg_rating
,avg(funny) as avg_funny
,avg(useful) as avg_useful
,avg(cool) as avg_cool
,min(stars) as min_rating
,min(funny) as min_funny
,min(useful) as min_useful
,min(cool) as min_cool
,max(stars) as max_rating
,max(funny) as max_funny
,max(useful) as max_useful
,max(cool) as max_cool
from review
group by
user_id) r on r.user_id=u.id




